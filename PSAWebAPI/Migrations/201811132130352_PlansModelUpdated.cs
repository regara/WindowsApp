namespace PSAWebAPI.Migrations
{
    using System;
    using System.Data.Entity.Migrations;
    
    public partial class PlansModelUpdated : DbMigration
    {
        public override void Up()
        {
            AddColumn("dbo.Lots", "LotNum", c => c.Int(nullable: false));
            AddColumn("dbo.Lots", "Phase", c => c.String());
            AddColumn("dbo.Lots", "AddressPermitNum", c => c.String());
            AddColumn("dbo.Lots", "NeedsToBeDone", c => c.String());
            AddColumn("dbo.Lots", "PlanPhase", c => c.String());
            AddColumn("dbo.Plans", "PlanName", c => c.String());
            AddColumn("dbo.Plans", "PlanRevisionDate", c => c.Int(nullable: false));
            AddColumn("dbo.Plans", "PlanSqFt", c => c.Int(nullable: false));
            AddColumn("dbo.Plans", "PlanUnits", c => c.Int(nullable: false));
            AddColumn("dbo.Plans", "PlanStories", c => c.Int(nullable: false));
            AddColumn("dbo.Plans", "PlanGlazingPerc", c => c.Int(nullable: false));
            AddColumn("dbo.Plans", "PlanESRating", c => c.Int(nullable: false));
            AddColumn("dbo.Plans", "PlanDataSheetDate", c => c.String());
            AddColumn("dbo.Plans", "PlanZones", c => c.Int(nullable: false));
            AddColumn("dbo.Plans", "PlanCodeYear", c => c.Int(nullable: false));
            AddColumn("dbo.Plans", "TestDuctCompliance", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestDuctSample", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestTXVCompliance", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestTXVSample", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestHighEERCompliance", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestHighEERSample", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestInfiltrationCompliance", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestInfiltrationSample", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestMaxCoolCompliance", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestMaxCoolSample", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestAirFlowVerifCompliance", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestAirFlowVerifSample", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestHighQualCompliance", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestHighQualSample", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestRoom2RoomCompliance", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestRoom2RoomCSample", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestSurfAreaCompliance", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestSurfAreaSample", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestDuctInCondSpaceCompliance", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestDuctInCondSpaceSample", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestRefChargeCompliance", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestRefChargeSample", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestFanWattCompliance", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestFanWattSample", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestRadientBarCompliance", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestRadientBarSample", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestSolarHERSCompliance", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestSolarHERSSample", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestGreenCompliance", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestEnergyStarCompliance", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestEnergyStarSample", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestIAQCompliance", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestIAQSample", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestHighSEERCompliance", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestHighSEERSample", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestDHWDistCompliance", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestDHWDistSample", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestLowLeakAirCompliance", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestLowLeakAirSample", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestOtherCompliance", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestOtherSample", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestOther2Sample", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "TestOther2Compliance", c => c.Boolean(nullable: false));
            AddColumn("dbo.Plans", "BillInfoItem", c => c.String());
            AddColumn("dbo.Plans", "BillInfoAmount", c => c.Int(nullable: false));
            AddColumn("dbo.Plans", "BillInfoNote", c => c.String());
            AddColumn("dbo.Plans", "LoadHeat", c => c.Int(nullable: false));
            AddColumn("dbo.Plans", "LoadCool", c => c.Int(nullable: false));
            AddColumn("dbo.Plans", "LoadAHRINum", c => c.Int(nullable: false));
            DropColumn("dbo.Lots", "PlanName");
            DropColumn("dbo.Lots", "PlanRevisionDate");
            DropColumn("dbo.Lots", "PlanSqFt");
            DropColumn("dbo.Lots", "PlanUnits");
            DropColumn("dbo.Lots", "PlanStories");
            DropColumn("dbo.Lots", "PlanGlazingPerc");
            DropColumn("dbo.Lots", "PlanESRating");
            DropColumn("dbo.Lots", "PlanDataSheetDate");
            DropColumn("dbo.Lots", "PlanZones");
            DropColumn("dbo.Lots", "PlanCodeYear");
            DropColumn("dbo.Lots", "TestEnergyStar");
            DropColumn("dbo.Lots", "BillInfoItem");
            DropColumn("dbo.Lots", "BillInfoAmount");
            DropColumn("dbo.Lots", "BillInfoNote");
            DropColumn("dbo.Lots", "LoadHeat");
            DropColumn("dbo.Lots", "LoadCool");
            DropColumn("dbo.Lots", "LoadAHRINum");
            DropColumn("dbo.Plans", "LotNum");
            DropColumn("dbo.Plans", "Phase");
            DropColumn("dbo.Plans", "AddressPermitNum");
            DropColumn("dbo.Plans", "NeedsToBeDone");
            DropColumn("dbo.Plans", "PlanPhase");
        }
        
        public override void Down()
        {
            AddColumn("dbo.Plans", "PlanPhase", c => c.String());
            AddColumn("dbo.Plans", "NeedsToBeDone", c => c.String());
            AddColumn("dbo.Plans", "AddressPermitNum", c => c.String());
            AddColumn("dbo.Plans", "Phase", c => c.String());
            AddColumn("dbo.Plans", "LotNum", c => c.Int(nullable: false));
            AddColumn("dbo.Lots", "LoadAHRINum", c => c.Int(nullable: false));
            AddColumn("dbo.Lots", "LoadCool", c => c.Int(nullable: false));
            AddColumn("dbo.Lots", "LoadHeat", c => c.Int(nullable: false));
            AddColumn("dbo.Lots", "BillInfoNote", c => c.String());
            AddColumn("dbo.Lots", "BillInfoAmount", c => c.Int(nullable: false));
            AddColumn("dbo.Lots", "BillInfoItem", c => c.String());
            AddColumn("dbo.Lots", "TestEnergyStar", c => c.Boolean(nullable: false));
            AddColumn("dbo.Lots", "PlanCodeYear", c => c.Int(nullable: false));
            AddColumn("dbo.Lots", "PlanZones", c => c.Int(nullable: false));
            AddColumn("dbo.Lots", "PlanDataSheetDate", c => c.String());
            AddColumn("dbo.Lots", "PlanESRating", c => c.Int(nullable: false));
            AddColumn("dbo.Lots", "PlanGlazingPerc", c => c.Int(nullable: false));
            AddColumn("dbo.Lots", "PlanStories", c => c.Int(nullable: false));
            AddColumn("dbo.Lots", "PlanUnits", c => c.Int(nullable: false));
            AddColumn("dbo.Lots", "PlanSqFt", c => c.Int(nullable: false));
            AddColumn("dbo.Lots", "PlanRevisionDate", c => c.Int(nullable: false));
            AddColumn("dbo.Lots", "PlanName", c => c.String());
            DropColumn("dbo.Plans", "LoadAHRINum");
            DropColumn("dbo.Plans", "LoadCool");
            DropColumn("dbo.Plans", "LoadHeat");
            DropColumn("dbo.Plans", "BillInfoNote");
            DropColumn("dbo.Plans", "BillInfoAmount");
            DropColumn("dbo.Plans", "BillInfoItem");
            DropColumn("dbo.Plans", "TestOther2Compliance");
            DropColumn("dbo.Plans", "TestOther2Sample");
            DropColumn("dbo.Plans", "TestOtherSample");
            DropColumn("dbo.Plans", "TestOtherCompliance");
            DropColumn("dbo.Plans", "TestLowLeakAirSample");
            DropColumn("dbo.Plans", "TestLowLeakAirCompliance");
            DropColumn("dbo.Plans", "TestDHWDistSample");
            DropColumn("dbo.Plans", "TestDHWDistCompliance");
            DropColumn("dbo.Plans", "TestHighSEERSample");
            DropColumn("dbo.Plans", "TestHighSEERCompliance");
            DropColumn("dbo.Plans", "TestIAQSample");
            DropColumn("dbo.Plans", "TestIAQCompliance");
            DropColumn("dbo.Plans", "TestEnergyStarSample");
            DropColumn("dbo.Plans", "TestEnergyStarCompliance");
            DropColumn("dbo.Plans", "TestGreenCompliance");
            DropColumn("dbo.Plans", "TestSolarHERSSample");
            DropColumn("dbo.Plans", "TestSolarHERSCompliance");
            DropColumn("dbo.Plans", "TestRadientBarSample");
            DropColumn("dbo.Plans", "TestRadientBarCompliance");
            DropColumn("dbo.Plans", "TestFanWattSample");
            DropColumn("dbo.Plans", "TestFanWattCompliance");
            DropColumn("dbo.Plans", "TestRefChargeSample");
            DropColumn("dbo.Plans", "TestRefChargeCompliance");
            DropColumn("dbo.Plans", "TestDuctInCondSpaceSample");
            DropColumn("dbo.Plans", "TestDuctInCondSpaceCompliance");
            DropColumn("dbo.Plans", "TestSurfAreaSample");
            DropColumn("dbo.Plans", "TestSurfAreaCompliance");
            DropColumn("dbo.Plans", "TestRoom2RoomCSample");
            DropColumn("dbo.Plans", "TestRoom2RoomCompliance");
            DropColumn("dbo.Plans", "TestHighQualSample");
            DropColumn("dbo.Plans", "TestHighQualCompliance");
            DropColumn("dbo.Plans", "TestAirFlowVerifSample");
            DropColumn("dbo.Plans", "TestAirFlowVerifCompliance");
            DropColumn("dbo.Plans", "TestMaxCoolSample");
            DropColumn("dbo.Plans", "TestMaxCoolCompliance");
            DropColumn("dbo.Plans", "TestInfiltrationSample");
            DropColumn("dbo.Plans", "TestInfiltrationCompliance");
            DropColumn("dbo.Plans", "TestHighEERSample");
            DropColumn("dbo.Plans", "TestHighEERCompliance");
            DropColumn("dbo.Plans", "TestTXVSample");
            DropColumn("dbo.Plans", "TestTXVCompliance");
            DropColumn("dbo.Plans", "TestDuctSample");
            DropColumn("dbo.Plans", "TestDuctCompliance");
            DropColumn("dbo.Plans", "PlanCodeYear");
            DropColumn("dbo.Plans", "PlanZones");
            DropColumn("dbo.Plans", "PlanDataSheetDate");
            DropColumn("dbo.Plans", "PlanESRating");
            DropColumn("dbo.Plans", "PlanGlazingPerc");
            DropColumn("dbo.Plans", "PlanStories");
            DropColumn("dbo.Plans", "PlanUnits");
            DropColumn("dbo.Plans", "PlanSqFt");
            DropColumn("dbo.Plans", "PlanRevisionDate");
            DropColumn("dbo.Plans", "PlanName");
            DropColumn("dbo.Lots", "PlanPhase");
            DropColumn("dbo.Lots", "NeedsToBeDone");
            DropColumn("dbo.Lots", "AddressPermitNum");
            DropColumn("dbo.Lots", "Phase");
            DropColumn("dbo.Lots", "LotNum");
        }
    }
}
